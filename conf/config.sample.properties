# This is the central configuration file for UnifiedViews.
#
# This file contains just a sample configuration and is not used by the
# application. Please check https://grips.semantic-web.at/display/UDDOC/Installation+Guide to 
# see where this file should be placed. 
#
# Special characters #, !, =, and :  should be properly escaped
# with a preceding backslash to ensure that they are properly loaded.


####### CORE CONFIGURATION #######

# Working space of UnifiedViews (should end with "backend/working"). 
# Backend requires this for storing working data as pipelines are executed
# Frontend requires this for e.g. debugging RDF data
general.workingdir = /home/unifiedviews/Core/backend/working

# Space for DPUs and shared libraries (points to "target" folder, which contains then subfolders "dpu" and "lib"). 
# By default, after running "mvn clean install" on the repository "UnifiedViews/Core", this should point to "{Core}/target"
module.path = /home/unifiedviews/Core/target

# directory where frontend log (and log created by UnifiedViews REST API - master log) should be stored (should not end with / or \ )
frontend.log.directory = /var/log/unifiedviews/frontend

# directory where backend log should be stored (should not end with / or \ )
backend.log.directory = /var/log/unifiedviews/backend

# Language configuration (e.g.: en, en_US, sk, sk_SK, cz, cz_CZ, ...)
# To use proper localisation
# for more details see:
# http://www.w3.org/International/articles/language-tags/
# http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry 
locale = en


### Connection configuration setting for relational database
# for mysql {
database.sql.driver  =  com.mysql.jdbc.Driver
database.sql.url  = jdbc:mysql://localhost:3306/unifiedviews?characterEncoding=utf8
database.sql.user = unifiedviews
database.sql.password = unifiedviews
# }

# for postgresql {
# database.sql.driver = org.postgresql.Driver
# database.sql.url  =  jdbc:postgresql://localhost:5432/unifiedviews
# database.sql.user = unifiedviews
# database.sql.password = unifiedviews
# }

# for mariadb {
# database.sql.driver  =  org.mariadb.jdbc.Driver
# database.sql.url  = jdbc:mariadb://localhost:3306/unifiedviews?characterEncoding=utf8
# database.sql.user = unifiedviews
# database.sql.password = unifiedviews
# }

# for mssql {
# database.sql.driver = com.microsoft.sqlserver.jdbc.SQLServerDriver
# database.sql.url  =  jdbc:sqlserver://localhost:1433;databaseName=unifiedviews
# database.sql.user = unifiedviews
# database.sql.password = unifiedviews
# }


### Connection configuration setting for RDF database
# use local rdf4j native store (default) {
database.rdf.platform = localRDF
# }

# or GraphDB {
# database.rdf.platform = graphdb
# database.rdf.url = http://localhost:7200/repositories/uv
# database.rdf.user = admin
# database.rdf.password = admin
# }

# or remote rdf4j platform {
# database.rdf.platform = remoteRDF
# database.rdf.url = http://ip6-localhost:8080/openrdf-sesame
# database.rdf.user =
# database.rdf.password =
# }


####### Other settings for FRONTEND (Administration UI of UnifiedViews) ####### 
# string diplayed next to the UV logo in GUI
installation.name = Test

# Frontend theme.
frontend.theme = UnifiedViewsTheme

# how long should frontend (and UnifiedViews REST API app) keep its logs (in days). By default 14 days.
frontend.log.keepDays = 14

# maximum size of logs for frontend (and UnifiedViews REST API app). 1GB by default. Sample values: 10MB, 100MB, 1GB  
frontend.log.maxSize = 1GB

# HTML file with text to be displayed on title UV page (optional); By default, text is taken from localized resource
# frontend.initial.page = {path to HTML file with custom title page text}

# Intro page of UnifiedViews administration UI shows contact on UnifiedViews admin
email.admin = admin@example.com

# Reserved for developers to expose further libraries by Core
# To ensure backward compatibility with UnifiedViews 2.X DPUs (so that such DPUs may be used in frontend - but such DPUs cannot be executed!)
module.frontend.expose = sun.misc,sun.io,eu.unifiedviews.dataunit.files;version="2.1.7",eu.unifiedviews.dataunit.rdf;version="2.1.7", eu.unifiedviews.dataunit.relational;version="2.1.7", eu.unifiedviews.dpu;version="2.1.7",eu.unifiedviews.dpu.config;version="2.1.7",eu.unifiedviews.dpu.config.vaadin;version="2.1.7",eu.unifiedviews.dataunit;version="2.1.7" 

####### Other settings for BACKEND (Pipeline executor) ####### 

# Backend ID used to mark pipeline executions executed by this backend
# Backend ID is mandatory parameter both for single and cluster mode
backend.id = BackendServer1

# Backend application configuration
backend.host = 127.0.0.1
backend.port = 5010

# how long should backend keep its logs (in days). By default 14 days.
backend.log.keepDays = 14

# maximum size of logs for backend (1GB by default). Sample values: 10MB, 100MB, 1GB  
backend.log.maxSize = 1GB

# Backend embedded HTTP probe port (default port 8066)
# backend.probe.http.port = 8066

# If backend should restart running executions on startup
# By default running executions are restarted, if false, executions are failed by backend at startup
# backend.startup.restart.running = true

# Automatic delete of old executions limit in days - delete all executions older than the defined count of days
# By default set to -1 which means no executions are automatically cleaned up
# backend.execution.cleanup.days.limit = -1

# Automatic delete of old logs in days - delete all logs that are older than defined amount of days
# By default it is set to -1 which means that no logs are automatically deleted
# exec.log.history = -1

# Reserved for developers to expose further libraries by Core
# To ensure backward compatibility with UnifiedViews 2.X DPUs (so that such DPUs may be used in frontend - but such DPUs cannot be executed!)
module.backend.expose = sun.misc,sun.io,eu.unifiedviews.dataunit.files;version="2.1.7",eu.unifiedviews.dataunit.rdf;version="2.1.7", eu.unifiedviews.dataunit.relational;version="2.1.7", eu.unifiedviews.dpu;version="2.1.7",eu.unifiedviews.dpu.config;version="2.1.7",eu.unifiedviews.dpu.config.vaadin;version="2.1.7",eu.unifiedviews.dataunit;version="2.1.7"


####### Other settings ####### 
# Administrator contact email for sending reports and failure notifications 
email.enabled = false
# use if email.enabled = true
#email.smtp.host = smtp.example.com
#email.smtp.port = 25
#email.smtp.ttl = false
#email.smtp.tls = false
#email.from = unifiedviews@example.com
#email.from.name = UV admin
#email.authorization = false
# use if email.authorization = true
#email.username = 
#email.password = 

# Name of the admin permission which is able to see all entitites (pipelines)
admin.permission=administrator

# Use localized names from DPU resource bundles during DPU import, true/false
dpu.name.localized = false

#cryptography.enabled = false
#cryptography.key.file = /home/unifiedviews/Core/cryptography.key

# Globally disable optional DPU tabs; By default, all tabs are displayed
# This is generic property, if any new tab will be introduced, it can be globally disabled using 
# property frontend.dpu.tab.disabled.{TabClassName}
#frontend.dpu.tab.disabled.AboutTab = false
frontend.dpu.tab.disabled.FaultTolerance = false
#frontend.dpu.tab.disabled.ConfigCopyPasteTab = false

# Optional external link displayed in top horizontal menu (last menu item)
#external.menu.link.name = CKAN catalog
#external.menu.link.url = http://ckan.org

# Globally enables / disables possibility to use template configuration for DPU instance
# When disabled, DPU detail dialog does not provide possibility to use template configuration
# By default, template configuration is enabled
# Before disabling, all DPU instances configured to use template configuration must be reconfigured - use template configuration unchecked !
# Trying to start frontend with this property disabled (false) and having DPU instances configured to use template configuration will fail !!!
# dpu.instance.template.config.enabled = true

# Timeout for backend activity
# If frontend detects that no backend has been active for more than this limit, frontend works in backend offline mode
# Timeout is in secods, default = 10 s
# backend.alive.limit = 10

####### CAS settings ####### 
#CAS server URL
#cas.server.host=https://192.168.1.8:8443/cas2

#Callback URL for spring to authenticate the user.
#cas.security.check.url=http://192.168.6.73:18080/unifiedviews/login/cas

#CAS login URL
#cas.login.url=https://192.168.1.8:8443/cas2/login

#CAS logout URL
#cas.logout.url=https://192.168.1.8:8443/cas2/logout?service=http%3A%2F%2F192.168.7.42%3A18080%2Funifiedviews%2F


#in case this property is true you can define relative address in property cas.security.check.url
#cas.behindProxy=false

#CAS attribute containing user name
#cas.attributeName.userName = UserName

#CAS attribute containing full name
#cas.attributeName.fullName = FormattedName

#CAS attribute containing roles 
#cas.attributeName.role = Roles

#CAS attribute containing actor id (optional)
#cas.attributeName.actorId = ActorID

#CAS attribute containing actor full name (mandatory when actor id is sent in CAS)
#cas.attributeName.actorName = ActorFormattedName

# If enabled, menu will include hidden iframe, that renews session with IAM identity provider in the background. true/false
# By default it is considered to be set to false
# frontend.renew.iframe.enabled = true
# Source property for renew iframe. Makes sense only if frontend.renew.iframe.enabled is set to true. 
# WARNING : hostname must be resolvable by any client in order to renew session properly!
# frontend.renew.iframe.src = https://example.org/cas/login?saml1=Saml2Client&needs_client_renew=true

